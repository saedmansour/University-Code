#!/usr/bin/perl -w

#CountCorpus.pl

use strict;



use lib ".";

use CorpusProbabilities;

#runs the CountCorpus function in CorpusProbabilities.pm and saves the results to a file

########################### Main program #####################################
my $outputlexprob = $ARGV[0];	#corpus.lex.prob
my $corpusfile = $ARGV[1]; 
my $sublexicon = $ARGV[2];

if ($#ARGV >=3 && $sublexicon ne "-") {
   SetLambda($ARGV[3]);
}

my $with_sublexicon = ($sublexicon ne "-");

if ($with_sublexicon) {
  print STDERR "ambiguous corpus is specified\n";
}
else { 
  print STDERR "no ambiguous corpus\n";
}

#read the morpheme tag sequence language model generated by ngram-count over the 
#tags of the corpus, updates LM in LM.pl!
#ReadLM($langmodel);

#while (<STDIN>) {
#  chomp;
#  printf STDERR "Log prob is: %e\n",SequenceProb($_ . ' </s>',3,'<s>');
#}
#exit;

print STDERR "Counting tagged corpus...\n";
#updates in CorpusProbabilities.pm counts of words and analyses
CountCorpus($corpusfile);


if ($with_sublexicon) {
  print STDERR "Counting ambiguous corpus...\n"; 
  CountSublexicon($sublexicon);
  print STDERR "Calculating combined probabilities...\n";
  CreateCombinedProbabilities();
}


SaveLexicalProb($outputlexprob);





#saves the global variables 
#$GPARSES{$word}{$gparse}++;				(save)
#$GANALYSES{$analysis}++;						(save)
#$GWORDANALYSISPAIRS{$analysis}{$word}++;	(save)
#$ANALYSESCOUNT++		(seems needed only for ambig, but save anyway)
#$GCATS{$tag}++;
#$GPAIRS{$tag}{$morph}++;
#$PAIRCOUNT++;
#$CATCOUNTS{$count}++;	try to save (with CATS)
#$PAIRCOUNTS{$count}++;	try to save (with PAIRS)
#ReversePairs(\%GPAIRS,\%GREVPAIRS);

